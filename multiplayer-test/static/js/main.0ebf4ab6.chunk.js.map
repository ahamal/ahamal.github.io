{"version":3,"sources":["models.js","Scene.js","Engine.js","Server.js","EngineX.js","Client.js","App.js","index.js"],"names":["PlayerModel","v","this","props","value","react_default","a","createElement","className","style","top","y","left","x","background","color","transform","concat","r","position","React","Component","Scene","_this","s","frame","ref","el","onMouseMove","e","mouseX","pageX","offsetLeft","mouseY","pageY","offsetTop","onMouseUp","onMouseDown","_","map","players","k","models_PlayerModel","key","debug","debugC","ex","trails","t","actionSetId","definitive","timeStamp","Engine","Object","classCallCheck","clients","p","p1","p2","mouse","_ref","actionSets","cloneDeep","each","actionSet","pc","clientId","actions","type","id","cId","x1","y1","x2","y2","player","dx","right","dy","up","down","Math","atan2","PI","Date","Server","possibleConstructorReturn","getPrototypeOf","call","update","actionsBuffer","splice","length","engine","forceUpdate","send","subscriptions","fn","onReceive","data","push","getFrame","subscribe","updateRate","sendRate","setInterval","src_Scene_0","EngineX","interpolationDelay","onServerFrame","definitiveFrame","frameBuffer","unshift","pop","predictionFrame","verifyPrediction","getDisplayFrame","combine","getInterpolated","getPredicted","buffer","renderAt","i","findIndex","b","receiveTime","s1","s2","fraction","interpolate","actionSetBuffer","logTrails","errorSmoothing","interpolationFields","predictionFields","updateInterval","f1","f2","result","forEach","path","v1","get","v2","set","interpolated","predicted","field","getTime","_this2","chop","findLastIndex","trail","eX","eY","Client","onKeyDown","pressedKeys","controls","onAction","actionIdCounter","onKeyUp","onSceneMouse","bool","scene","action","actionSetCounter","sendToServer","onActionSet","setTimeout","server","lag","onServerData","refresh","displayFrame","frameRate","window","document","addEventListener","sendInterval","refreshInterval","App","src_Client_0","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","c","client1","src_Server_0","w","d","client2","connect","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.0ebf4ab6.chunk.js","sourcesContent":["import React from 'react'\nimport './models.css'\n\nclass PlayerModel extends React.Component {\n  render() {\n    var v = this.props.value;\n    return (\n      <div\n        className=\"player-model\"\n        style={{\n          top: v.y,\n          left: v.x,\n          background: v.color,\n          transform: `rotate(${v.r}deg)`\n        }}>\n        <div style={{ position: 'relative' }}>\n          <div\n            className=\"gun\"\n            style={{\n              background: v.color,\n            }}>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport { PlayerModel }","import React from 'react'\nimport _ from 'lodash';\nimport { PlayerModel } from './models'\n\nimport './Scene.css'\n\nclass Scene extends React.Component {\n  render() {\n    var s = this.props.frame;\n\n    return (\n      <div\n        className=\"scene\"\n        ref={ el => this.el = el }\n        onMouseMove={ e => {\n          this.mouseX = e.pageX - this.el.offsetLeft;\n          this.mouseY = e.pageY - this.el.offsetTop;\n        } }\n        onMouseUp={this.props.onMouseUp}\n        onMouseDown={this.props.onMouseDown}>\n        {s && _.map(s.players, (v, k) => <PlayerModel key={k} value={v} />)}\n        {this.props.debug && this.debugC() }\n      </div>\n    );\n  }\n\n  debugC() {\n    var ex = this.props.ex;\n    return (\n      <div className=\"debugger\">\n        <div className=\"trails\">\n        {_.map(ex.trails, (t) => (\n          <div\n            className={'trail-dot' + (t.actionSetId === ex.definitive.actionSetId ? ' definitive' : '') }\n            key={t.timeStamp}\n            style={{ left: t.x + 'px', top: t.y + 'px' } } />\n        ))}\n        </div>\n        { ex.definitive && (\n          <div\n            className=\"definitive-dot\"\n            style={{ left: ex.definitive.x + 'px', top: ex.definitive.y + 'px' } } />\n        ) }\n      </div>\n    )\n  }\n}\n\nexport default Scene","import _ from 'lodash'\n\nvar findAngle = (x1, y1, x2, y2) => {\n  return (Math.atan2(y2 - y1, x2 - x1) * 180 / Math.PI - 90) % 360;\n}\n\nclass Engine {\n  constructor() {\n    this.clients = ['p1', 'p2']\n\n    this.p = {\n      p1: {},\n      p2: {}\n    }\n    this.mouse = {}\n  }\n\n  update({ frame, actionSets }) {\n    frame = _.cloneDeep(frame);\n\n    _.each(actionSets, actionSet => {\n      var pc = this.p[actionSet.clientId]\n      pc.mouseX = actionSet.mouseX;\n      pc.mouseY = actionSet.mouseY;\n\n      _.each(actionSet.actions, a => {\n        if (a.type === 'keyDown') {\n          pc[a.key] = true;\n        } else if (a.type === 'keyUp') {\n          pc[a.key] = false;\n        }\n      });\n\n      frame.actionSets[actionSet.clientId] = actionSet.id;\n    });\n\n    _.each(this.p, (pc, cId) => {\n      var player = frame.players[cId];\n\n      var dx = pc.left ? -1 : pc.right ? 1 : 0;\n      var dy = pc.up ? -1 : pc.down ? 1 : 0;\n      var s = (dx !== 0 && dy !== 0 ? 0.707 : 1) * 10;\n      player.x += dx * s;\n      player.y += dy * s;\n      player.r = findAngle(player.x, player.y, pc.mouseX || 0, pc.mouseY || 0);\n    })\n    \n    frame.timeStamp = new Date();\n    return frame;\n  }\n}\n\nexport default Engine;","import React from 'react'\nimport _ from 'lodash'\nimport Scene from './Scene'\nimport Engine from './Engine';\n\nimport './Server.css';\n\nclass Server extends React.Component{\n  constructor() {\n    super();\n    this.engine = new Engine();\n\n    this.subscriptions = {};\n    this.actionsBuffer = [];\n\n    this.frame = {\n      actionSets: {},\n      players: {\n        p1: { x: 30, y: 30, r: 90, color: 'green' },\n        p2: { x: 370, y: 370, r: 360, color: 'cyan' }\n      },\n    };\n\n    this.updateRate = 30;\n    this.sendRate = 100;\n\n    setInterval(this.update, this.updateRate);\n    setInterval(this.send, this.sendRate);\n  }\n\n  render() {\n    return (\n      <div className=\"server\">\n        <div>Server</div>\n        <Scene frame={this.frame} />\n      </div>\n    )\n  }\n\n  update = () => {\n    var actionSets = this.actionsBuffer.splice(0, this.actionsBuffer.length);\n\n    var frame = this.engine.update({\n      frame: this.frame,\n      actionSets: actionSets\n    });\n\n    this.frame = frame;\n    this.forceUpdate();\n  }\n\n  send = () => {\n    _.each(this.subscriptions, (fn, id) => {\n      fn(this.frame);\n    });\n  }\n\n  onReceive = (id, data) => {\n    data.clientId = id;\n    this.actionsBuffer.push(data);\n  }\n\n  getFrame = (id, fn) => {\n    fn(this.frame);\n  }\n\n  subscribe = (id, fn) => {\n    this.subscriptions[id] = fn;\n  }\n}\n\nexport default Server;","import Engine from \"./Engine\";\nimport _ from 'lodash';\n\nclass EngineX {\n  constructor({ interpolationDelay, updateRate, id }) {\n    this.id = id;\n    this.interpolationDelay = interpolationDelay;\n    this.updateRate = updateRate;\n\n    this.frameBuffer = [0, 0, 0, 0, 0];\n    this.actionSetBuffer = [];\n    this.engine = new Engine();\n    this.errorSmoothing = 0.3;\n\n    this.interpolationFields = [\n      'players.p1.x',\n      'players.p1.y',\n      'players.p1.r',\n      'players.p2.x',\n      'players.p2.y',\n      'players.p2.r',\n    ];\n\n    this.predictionFields = [\n      `players.${id}.x`,\n      `players.${id}.y`,\n      `players.${id}.r`\n    ];\n\n    this.updateInterval = setInterval(this.update, this.updateRate);\n\n    this.trails = [];\n  }\n\n  onServerFrame = (frame) => {\n    this.definitiveFrame = frame;\n    this.frameBuffer.unshift(frame);\n    this.frameBuffer.pop();\n\n    if (!this.predictionFrame)\n      this.predictionFrame = _.cloneDeep(this.definitiveFrame);\n    \n    this.verifyPrediction();\n  }\n\n  getDisplayFrame = () => {\n    return this.combine(\n      this.getInterpolated(),\n      this.getPredicted()\n    )\n  }\n\n  getInterpolated = () => {\n    var buffer = this.frameBuffer;\n    var renderAt = new Date() - this.interpolationDelay;\n\n    var i = _.findIndex(buffer, b => renderAt > b.receiveTime, 1)\n    if (i === -1)\n      return;\n\n    var s1 = buffer[i];\n    var s2 = buffer[i - 1];\n    var fraction = (renderAt - s1.receiveTime) / (s2.receiveTime - s1.receiveTime);\n    return this.interpolate(s1, s2, fraction);\n  }\n\n  interpolate(f1, f2, fraction) {\n    var result = _.cloneDeep(f1);\n    this.interpolationFields.forEach(path => {\n      var v1 = _.get(f1, path);\n      var v2 = _.get(f2, path);\n      if (!v1 || !v2) return;\n      _.set(result, path, (v1 + (v2 - v1) * fraction))\n    })\n    return result;\n  }\n\n  combine(interpolated, predicted) {\n    if (!interpolated)\n      return;\n\n    if (!predicted)\n      return interpolated;\n    \n    var frame = interpolated;\n    this.predictionFields.forEach(field => {\n      _.set(frame, field, _.cloneDeep(_.get(predicted, field)));\n    });\n    return frame;\n  }\n\n\n  onActionSet(actionSet) {\n    this.actionSetBuffer.push(actionSet);\n  }\n\n  getPredicted() {\n    return this.predictionFrame;\n  }\n\n\n  update = () => {\n    if (!this.predictionFrame)\n      return;\n    \n    var actionSets = this.actionSetBuffer.splice(0, this.actionSetBuffer.length);\n\n    this.predictionFrame = this.engine.update({\n      frame: this.predictionFrame,\n      actionSets: actionSets\n    });\n    \n    this.logTrails();\n  }\n\n  logTrails() {\n    this.trails.push({\n      x: _.get(this.predictionFrame, `players.${this.id}.x`),\n      y: _.get(this.predictionFrame, `players.${this.id}.y`),\n      actionSetId: _.get(this.predictionFrame, `actionSets.${this.id}`),\n      timeStamp: (new Date()).getTime()\n    });\n  }\n\n  verifyPrediction() {\n    var\n      frame = this.predictionFrame,\n      trails = this.trails;\n\n    this.definitive = {\n      x: _.get(this.definitiveFrame, `players.${this.id}.x`),\n      y: _.get(this.definitiveFrame, `players.${this.id}.y`),\n      actionSetId: _.get(this.definitiveFrame, `actionSets.${this.id}`)\n    }\n    \n    var chop = _.findLastIndex(trails, t => t.actionSetId === this.definitive.actionSetId);\n    trails.splice(0, chop);\n\n\n    var trail = trails[0];\n    if (!trail) return;\n    var\n      eX = (this.definitive.x - trail.x) * this.errorSmoothing,\n      eY = (this.definitive.y - trail.y) * this.errorSmoothing;\n    \n    _.each(trails, t => {\n      t.x += eX;\n      t.y += eY;\n    })\n\n    _.set(frame, `players.${this.id}.x`, _.get(frame, `players.${this.id}.x`) + eX);\n    _.set(frame, `players.${this.id}.y`, _.get(frame, `players.${this.id}.y`) + eY);\n  }\n}\n\nexport default EngineX","import React from 'react';\nimport Scene from './Scene';\nimport EngineX from './EngineX';\nimport _ from 'lodash'\n\nimport './Client.css';\n\n\nclass Client extends React.Component {\n  constructor(p) {\n    super();\n    this.id = p.id;\n    this.lag = 100;\n    this.sendRate = 100;\n    this.frameRate = 30;\n\n    this.controls = p.controls;\n    this.actionsBuffer = [];\n    this.actionIdCounter = 0;\n    this.actionSetCounter = 0;\n\n    this.interpolationDelay = 250;\n    this.ex = new EngineX({\n      interpolationDelay: this.interpolationDelay,\n      updateRate: 30,\n      id: this.id\n    })\n  }\n\n  componentDidMount() {\n    this.pressedKeys = {}\n    window.document.addEventListener('keydown', this.onKeyDown);\n    window.document.addEventListener('keyup', this.onKeyUp);\n  }\n\n  onKeyDown = (e) => {\n    if (this.pressedKeys[e.key]) return;\n    this.pressedKeys[e.key] = true;\n    var key = this.props.controls[e.key]\n    if (key)\n      this.onAction({\n        type: 'keyDown',\n        key: key,\n        id: this.actionIdCounter++,\n        timeStamp: new Date()\n      });\n  }\n\n  onKeyUp = (e) => {\n    this.pressedKeys[e.key] = false\n    var key = this.props.controls[e.key]\n    if (key)\n      this.onAction({\n        type: 'keyUp',\n        key: key,\n        id: this.actionIdCounter++,\n        timeStamp: new Date()\n      });\n  }\n\n  onSceneMouse = (b) => {\n    this.onAction({\n      type: 'mouseDown',\n      bool: b,\n      mouseX: this.scene.mouseX,\n      mouseY: this.scene.mouseY,\n      id: this.actionIdCounter++,\n      timeStamp: new Date()\n   });\n  }\n\n  connect(server) {\n    this.server = server;\n    server.subscribe(this.id, this.onServerData);\n\n    this.sendInterval = setInterval(this.send, this.sendRate);\n    this.refreshInterval = setInterval(this.refresh, this.frameRate);\n  }\n\n  render() {\n    return (\n      <div className=\"client\">\n        <div>Client {this.id}</div>\n        <Scene\n          ref={ s => this.scene = s }\n          frame={this.displayFrame}\n          onMouseDown={_ => this.onSceneMouse(true)}\n          onMouseUp={_ => this.onSceneMouse(false)}\n          ex={this.ex}\n          debug={true}\n          />\n      </div>\n    )\n  }\n\n  onAction = (action) => {\n    this.actionsBuffer.push(action);\n  }\n\n  send = () => {\n    var actions = this.actionsBuffer.splice(0, this.actionsBuffer.length);\n    var actionSet = {\n      clientId: this.id,\n      id: this.actionSetCounter++,\n      actions: (actions.length > 0) && actions,\n      mouseX: this.scene.mouseX,\n      mouseY: this.scene.mouseY,\n    }\n    this.sendToServer(actionSet);\n    this.ex.onActionSet(actionSet);\n  }\n\n  sendToServer = (actionSet) => {\n    setTimeout(_ => this.server.onReceive(this.id, actionSet), this.lag);\n  }\n\n  onServerData = (data) => {\n    setTimeout(_ => this.onReceive(data), this.lag)\n  }\n\n  onReceive = (frame) => {\n    frame = _.cloneDeep(frame);\n    frame.receiveTime = new Date();\n    this.ex.onServerFrame(frame);\n  }\n\n  refresh = () => {\n    this.displayFrame = this.ex.getDisplayFrame()\n    this.forceUpdate();\n  }\n}\n\nexport default Client;","import React from 'react';\nimport './App.css';\nimport Server from './Server';\nimport Client from './Client';\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Client\n          id=\"p1\"\n          controls={{\n            'ArrowUp': 'up',\n            'ArrowDown': 'down',\n            'ArrowLeft': 'left',\n            'ArrowRight': 'right'\n          }}\n          ref={c => this.client1 = c} />\n        \n        <Server\n          ref={s => this.server = s} />\n\n        <Client\n          id=\"p2\"\n          controls={{\n            'w': 'up',\n            's': 'down',\n            'a': 'left',\n            'd': 'right'\n          }}\n          ref={c => this.client2 = c} />\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.client1.connect(this.server);\n    this.client2.connect(this.server);\n  }\n\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}